<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gonnaup.accountmanagement.dao.AccountDao">

    <resultMap type="org.gonnaup.account.domain.Account" id="AccountMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="applicationName" column="application_name" jdbcType="VARCHAR"/>
        <result property="accountName" column="account_name" jdbcType="VARCHAR"/>
        <result property="accountNickname" column="account_nickname" jdbcType="VARCHAR"/>
        <result property="accountAvatar" column="account_avatar" jdbcType="BLOB"/>
        <result property="accountStatu" column="account_statu" jdbcType="VARCHAR"/>
        <result property="lastLogintime" column="last_logintime" jdbcType="TIMESTAMP"/>
        <result property="tag" column="tag" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
        <result property="updatetime" column="updatetime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AccountMap">
        select
          id, application_name, account_name, account_nickname, account_avatar, account_statu, last_logintime, tag, createtime, updatetime
        from acountManagement.account
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AccountMap">
        select
          id, application_name, account_name, account_nickname, account_avatar, account_statu, last_logintime, tag, createtime, updatetime
        from acountManagement.account
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AccountMap">
        select
        id, application_name, account_name, account_nickname, account_avatar, account_statu, last_logintime, tag,
        createtime, updatetime
        from acountManagement.account
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="applicationName != null and applicationName != ''">
                and application_name = #{applicationName}
            </if>
            <if test="accountName != null and accountName != ''">
                and account_name = #{accountName}
            </if>
            <if test="accountNickname != null and accountNickname != ''">
                and account_nickname = #{accountNickname}
            </if>
            <if test="accountStatu != null and accountStatu != ''">
                and account_statu = #{accountStatu}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into acountManagement.account(id, application_name, account_name, account_nickname, account_avatar, account_statu, tag, createtime, updatetime)
        values (#{id}, #{applicationName}, #{accountName}, #{accountNickname}, #{accountAvatar}, #{accountStatu}, #{tag}, #{createtime}, #{updatetime})
    </insert>

    <insert id="insertBatch">
        insert into acountManagement.account(id, application_name, account_name, account_nickname, account_avatar,
        account_statu, tag, createtime, updatetime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.applicationName}, #{entity.accountName}, #{entity.accountNickname}, #{entity.accountAvatar},
            #{entity.accountStatu}, #{entity.tag}, #{entity.createtime}, #{entity.updatetime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch">
        insert into acountManagement.account(id, application_name, account_name, account_nickname, account_avatar,
        account_statu, last_logintime, tag, createtime, updatetime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.applicationName}, #{entity.accountName}, #{entity.accountNickname}, #{entity.accountAvatar},
            #{entity.accountStatu}, #{entity.lastLogintime}, #{entity.tag}, #{entity.createtime}, #{entity.updatetime})
        </foreach>
        on duplicate key update
        application_name = values(application_name) , account_name = values(account_name) , account_nickname =
        values(account_nickname) , account_avatar = values(account_avatar) , account_statu = values(account_statu) ,
        last_logintime = values(last_logintime) , tag = values(tag) , createtime = values(createtime) , updatetime =
        values(updatetime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update acountManagement.account
        <set>
            <if test="applicationName != null and applicationName != ''">
                application_name = #{applicationName},
            </if>
            <if test="accountName != null and accountName != ''">
                account_name = #{accountName},
            </if>
            <if test="accountNickname != null and accountNickname != ''">
                account_nickname = #{accountNickname},
            </if>
            <if test="accountAvatar != null">
                account_avatar = #{accountAvatar},
            </if>
            <if test="accountStatu != null and accountStatu != ''">
                account_statu = #{accountStatu},
            </if>
            <if test="lastLogintime != null">
                last_logintime = #{lastLogintime},
            </if>
            <if test="tag != null and tag != ''">
                tag = #{tag},
            </if>
            <if test="createtime != null">
                createtime = #{createtime},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from acountManagement.account where id = #{id} limit 1
    </delete>

</mapper>