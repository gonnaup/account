<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gonnaup.accountmanagement.dao.AuthenticationDao">

    <resultMap type="org.gonnaup.account.domain.Authentication" id="AuthenticationMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="accountId" column="account_id" jdbcType="INTEGER"/>
        <result property="applicationName" column="application_name" jdbcType="VARCHAR"/>
        <result property="authType" column="auth_type" jdbcType="VARCHAR"/>
        <result property="identifier" column="identifier" jdbcType="VARCHAR"/>
        <result property="credential" column="credential" jdbcType="VARCHAR"/>
        <result property="expires" column="expires" jdbcType="INTEGER"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
        <result property="updatetime" column="updatetime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AuthenticationMap">
        select
          id, account_id, application_name, auth_type, identifier, credential, expires, createtime, updatetime
        from authentication
        where id = #{id}
    </select>

    <select id="queryByAccountIdAndAuthType" resultMap="AuthenticationMap">
        select id, account_id, application_name, auth_type, identifier, credential, expires, createtime, updatetime
        from authentication
        where account_id = #{accountId}
          and auth_type = #{authType}
    </select>

    <select id="queryByApplicationnameAndAuthtypeAndIdentifier" resultMap="AuthenticationMap">
        select id, account_id, application_name, auth_type, identifier, credential, expires, createtime, updatetime
        from authentication
        where application_name = #{applicationName}
          and auth_type = #{authType}
          and identifier = #{identifier}
    </select>

    <select id="queryAllConditionalByLimit" resultMap="AuthenticationMap" databaseId="mysql">
        select id, account_id, application_name, auth_type, identifier, '******' as credential, expires, createtime, updatetime
        from authentication
        <where>
            <if test="authentication.id != null">
                and id = #{authentication.id}
            </if>
            <if test="authentication.accountId != null">
                and account_id = #{authentication.accountId}
            </if>
            <if test="authentication.applicationName != null and authentication.applicationName != ''">
                and application_name = #{authentication.applicationName}
            </if>
            <if test="authentication.authType != null and authentication.authType != ''">
                and auth_type = #{authentication.authType}
            </if>
            <if test="authentication.identifier != null and authentication.identifier != ''">
                and identifier like concat('%', #{authentication.identifier}, '%')
            </if>
        </where>
        order by id
        limit #{offset}, #{limit}
    </select>

    <select id="queryAllConditionalByLimit" resultMap="AuthenticationMap" databaseId="postgresql">
        select id, account_id, application_name, auth_type, identifier, '******' as credential, expires, createtime, updatetime
        from authentication
        <where>
            <if test="authentication.id != null">
                and id = #{authentication.id}
            </if>
            <if test="authentication.accountId != null">
                and account_id = #{authentication.accountId}
            </if>
            <if test="authentication.applicationName != null and authentication.applicationName != ''">
                and application_name = #{authentication.applicationName}
            </if>
            <if test="authentication.authType != null and authentication.authType != ''">
                and auth_type = #{authentication.authType}
            </if>
            <if test="authentication.identifier != null and authentication.identifier != ''">
                and identifier like concat('%', #{authentication.identifier}, '%')
            </if>
        </where>
        order by id
        limit #{limit} offset #{offset}
    </select>

    <select id="countAllConditional" resultType="int">
        select count(1)
        from authentication
        <where>
            <if test="authentication.id != null">
                and id = #{authentication.id}
            </if>
            <if test="authentication.accountId != null">
                and account_id = #{authentication.accountId}
            </if>
            <if test="authentication.applicationName != null and authentication.applicationName != ''">
                and application_name = #{authentication.applicationName}
            </if>
            <if test="authentication.authType != null and authentication.authType != ''">
                and auth_type = #{authentication.authType}
            </if>
            <if test="authentication.identifier != null and authentication.identifier != ''">
                and identifier like concat('%', #{authentication.identifier}, '%')
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into authentication(id, account_id, application_name, auth_type, identifier, credential, expires, createtime, updatetime)
        values (#{id}, #{accountId},#{applicationName}, #{authType}, #{identifier}, #{credential}, #{expires}, #{createtime}, #{updatetime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update authentication
        <set>
            <if test="accountId != null">
                account_id = #{accountId},
            </if>
            <if test="authType != null and authType != ''">
                auth_type = #{authType},
            </if>
            <if test="identifier != null and identifier != ''">
                identifier = #{identifier},
            </if>
            <if test="expires != null">
                expires = #{expires}
            </if>
            <if test="credential != null and credential != ''">
                credential = #{credential},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from authentication where id = #{id} limit 1
    </delete>

    <delete id="deleteByAccountIdAndAuthType">
        delete from authentication where account_id = #{accountId} and auth_type = #{authType} limit 1
    </delete>
</mapper>